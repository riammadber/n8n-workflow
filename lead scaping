{
  "nodes": [
    {
      "parameters": {
        "inputSource": "passthrough"
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        304,
        144
      ],
      "id": "aa00666a-d437-445d-b438-268e61ccac83",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "url": "https://api.apify.com/v2/acts/code_crafter~apollo-io-scraper/run-sync-get-dataset-items?",
        "sendQuery": true,
        "queryParameters": {
          "parameters": [
            {
              "name": "token",
              "value": "<API-KEY>"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n    \"getPersonalEmails\": true,\n    \"getWorkEmails\": true,\n    \"totalRecords\": 500,\n    \"url\": \"{{ $json.finalURL }}\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        992,
        144
      ],
      "id": "c48b7099-10ab-459c-9d64-2490fc738f26",
      "name": "Apollo Scraper"
    },
    {
      "parameters": {
        "jsCode": "// Retrieve the input data from node A.\nlet inputData = $node[\"JSON\"].json;\n// If the output is an array, take the first element; otherwise, use it as is.\nif (Array.isArray(inputData)) {\n  inputData = inputData[0];\n}\n\n// Now, access the \"query\" property. \n// We expect \"query\" to be an array, so take its first element.\nconst paramsData = inputData.query[0];\n\n// Base URL for Apollo\nconst baseURL = 'https://app.apollo.io/#/people';\n\n// Array to hold each part of the query string\nconst queryParts = [];\n\n// Add static parameters\nqueryParts.push('sortByField=recommendations_score');\nqueryParts.push('sortAscending=false');\nqueryParts.push('page=1');\n\n// Helper function to process and add array parameters to queryParts\nconst addArrayParams = (paramName, values) => {\n  values.forEach(val => {\n    // Replace '+' with space then encode the value \n    // (e.g., \"sydney+australia\" -> \"sydney australia\" -> \"sydney%20australia\")\n    const decodedValue = val.replace(/\\+/g, ' ');\n    queryParts.push(`${paramName}[]=${encodeURIComponent(decodedValue)}`);\n  });\n};\n\n// Process job titles (maps to personTitles[])\nif (paramsData.job_title && Array.isArray(paramsData.job_title)) {\n  addArrayParams('personTitles', paramsData.job_title);\n}\n\n// Process locations (maps to personLocations[])\nif (paramsData.location && Array.isArray(paramsData.location)) {\n  addArrayParams('personLocations', paramsData.location);\n}\n\n// Process business keywords (maps to qOrganizationKeywordTags[])\nif (paramsData.business && Array.isArray(paramsData.business)) {\n  addArrayParams('qOrganizationKeywordTags', paramsData.business);\n}\n\n// Add static included organization keyword fields\nqueryParts.push('includedOrganizationKeywordFields[]=tags');\nqueryParts.push('includedOrganizationKeywordFields[]=name');\n\n// Combine all query parts with '&' to form the full query string\nconst queryString = queryParts.join('&');\n\n// Build the final URL\nconst finalURL = `${baseURL}?${queryString}`;\n\n// Return the output as an array of objects\nreturn [{ json: { finalURL } }];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        752,
        144
      ],
      "id": "12ede3a3-82fe-4620-b692-7083e364f714",
      "name": "Create URL"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "336074e3-b3b9-4dde-92d7-fb5af51b8ffa",
              "name": "firstName",
              "value": "={{ $json.first_name }}",
              "type": "string"
            },
            {
              "id": "da8362c5-75a5-4431-847d-fd4e02112bcc",
              "name": "emailAddress",
              "value": "={{ $json.email }}",
              "type": "string"
            },
            {
              "id": "3c99e0e0-4184-4e85-baa0-8bb85e4e227b",
              "name": "linkedInURL",
              "value": "={{ $json.linkedin_url }}",
              "type": "string"
            },
            {
              "id": "a45af1ff-7026-47a0-a42c-bdb3b27c8e3d",
              "name": "seniority ",
              "value": "={{ $json.seniority }}",
              "type": "string"
            },
            {
              "id": "fa551406-a981-4fbb-babc-aa78ab10010d",
              "name": "jobTitle",
              "value": "={{ $json.employment_history[0].title }}",
              "type": "string"
            },
            {
              "id": "2e8d8d61-bd02-4f24-91f1-707152d99806",
              "name": "companyName",
              "value": "={{ $json.employment_history[0].organization_name }}",
              "type": "string"
            },
            {
              "id": "1295a702-636a-48bd-8bcd-df92162237fb",
              "name": "location",
              "value": "={{ $json.city }}, {{ $json.state }}",
              "type": "string"
            },
            {
              "id": "0072b657-0296-4858-b190-621831943816",
              "name": "country",
              "value": "={{ $json.country }}",
              "type": "string"
            },
            {
              "id": "22ce107c-30ef-4abe-9fab-8d49482da87c",
              "name": "Number",
              "value": "={{ $json.organization.primary_phone && $json.organization.primary_phone.sanitized_number && $json.organization.primary_phone.sanitized_number ? $json.organization.primary_phone.sanitized_number : null }}",
              "type": "string"
            },
            {
              "id": "302b9529-e16b-49ce-bbb6-ae2de90fed93",
              "name": "websiteURL",
              "value": "={{ $json.organization_website_url }}",
              "type": "string"
            },
            {
              "id": "13026de1-0927-44f7-8388-4d525f44974d",
              "name": "businessIndustry",
              "value": "={{ $('JSON').item.json.query[0].business[0].replaceAll('+',' ') }}",
              "type": "string"
            },
            {
              "id": "1a8ae803-f0bd-48d5-bf85-89b91c2e9c64",
              "name": "lastName",
              "value": "={{ $json.last_name }}",
              "type": "string"
            },
            {
              "id": "03cb9c0d-4c05-4d00-88a4-de33e34e7c16",
              "name": "emailStatus",
              "value": "={{ $json.email_status }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1200,
        144
      ],
      "id": "7294b180-fda6-41ea-893c-fc9dddb480ff",
      "name": "Extract Info"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "2ecbc937-c5dc-4948-8d27-ccdb4d4a9bed",
              "name": "output",
              "value": "={{ $input.all().length }} new contacts have been added to the Google Sheet!",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1856,
        144
      ],
      "id": "5d90a50b-cccb-4be0-a052-1d011661b90a",
      "name": "Edit Fields"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.limit",
      "typeVersion": 1,
      "position": [
        2064,
        144
      ],
      "id": "db3b8a9f-d7d3-4c63-9c0e-ed127d978488",
      "name": "Limit"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "={\n\"query\": \n{{ $json.query }}\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        528,
        144
      ],
      "id": "a402e491-db4f-42b6-b538-484571b67f6d",
      "name": "JSON"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "c49e7377-db5e-4458-bea5-9e297e19f620",
              "leftValue": "={{ $json.emailStatus }}",
              "rightValue": "verified",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        1424,
        144
      ],
      "id": "e2f271ad-88ab-4104-a3af-1f4a177e7470",
      "name": "Only Keep Verified Emails "
    },
    {
      "parameters": {
        "authentication": "appToken",
        "email": "null@gmail.com",
        "additionalFields": {},
        "options": {}
      },
      "type": "n8n-nodes-base.hubspot",
      "typeVersion": 2.1,
      "position": [
        1648,
        144
      ],
      "id": "3ee81479-e4b0-493c-99da-a60c991b9480",
      "name": "Create or update a contact",
      "credentials": {
        "hubspotAppToken": {
          "id": "AGQ4JXuaDCW1IN1Q",
          "name": "HubSpot account"
        }
      }
    }
  ],
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "JSON",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Apollo Scraper": {
      "main": [
        [
          {
            "node": "Extract Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create URL": {
      "main": [
        [
          {
            "node": "Apollo Scraper",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Info": {
      "main": [
        [
          {
            "node": "Only Keep Verified Emails ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "Limit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "JSON": {
      "main": [
        [
          {
            "node": "Create URL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Only Keep Verified Emails ": {
      "main": [
        [
          {
            "node": "Create or update a contact",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create or update a contact": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {
    "When Executed by Another Workflow": [
      {
        "query": "[{\"location\":[\"sydney+australia\"],\"business\":[\"marketing+agency\"],\"job_title\":[\"founder\"]}]"
      }
    ]
  },
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "6baf55fe0ef77c33d6fa749473787d2579a5b07f1458cc63604927053b912082"
  }
}
